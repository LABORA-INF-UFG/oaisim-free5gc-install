---
-   hosts: OAISim-with-free5gc
    become: yes
    remote_user: root
    vars:
        num_ues: '100'
        docker_custom_subnet_network: '192.188.2.0/24'
        docker_custom_network_name: 'free5gc'
        web_interface_port_access: '8080'
        BASE_DIR_INSTALL: 'OAISim-free5gc-conf'
        ip_address_AMF: '192.188.2.2'
        ip_address_SMF: '192.188.2.3'
        ip_address_HSS: '192.188.2.4'
        ip_address_PCRF: '192.188.2.5'
        ip_address_UPF: '192.188.2.6'
        ip_address_MONGO_DB: '192.188.2.100'
        ip_address_WEB_UI: '192.188.2.101'
        ip_address_OAISIM_ENB: '192.188.2.253'
        ip_address_OAISIM_UE: '192.188.2.254'
        free5gc_st1_image_name: 'laboraufg/free5gc-st1'
        free5gc_webui_image_name: 'laboraufg/webui-free5gc'
        free5gc_mongodb_image_name: 'laboraufg/mongodb-free5gc'
        oaisim_enb_image_name: 'laboraufg/enb-openairsim'
        oaisim_ue_image_name: 'laboraufg/ue-openairsim'
        UE_container_name: 'ue'
        ENB_container_name: 'enb'
        AMF_container_name: 'amf'
        SMF_container_name: 'smf'
        HSS_container_name: 'hss'
        PCRF_container_name: 'pcrf'
        UPF_container_name: 'upf'
        MONGO_DB_container_name: 'mongodb-svc'
        WEB_UI_container_name: 'webui'
        start_webapp: 'true'
        deploy_oaisim: 'true'
        clear_file_instalation: 'true'
        HPLMN : "20893"
        USIM_API_K : "8baf473f2f8fd09487cccbd7097c6862"
        OPC : "e734f8734007d6c5ce7a0508809e7e9c"
        user_equiments:
            - { ue_id: UE0 ,   msin: '0000000001' }
            - { ue_id: UE1 ,   msin: '0000000002' }
            - { ue_id: UE2 ,   msin: '0000000003' }
            - { ue_id: UE3 ,   msin: '0000000004' }
            - { ue_id: UE4 ,   msin: '0000000005' }
            - { ue_id: UE5 ,   msin: '0000000006' }
            - { ue_id: UE6 ,   msin: '0000000007' }
            - { ue_id: UE7 ,   msin: '0000000008' }
            - { ue_id: UE8 ,   msin: '0000000009' }
            - { ue_id: UE9 ,   msin: '0000000010' }
            - { ue_id: UE10 ,  msin: '0000000011' }
            - { ue_id: UE11 ,  msin: '0000000012' }
            - { ue_id: UE12 ,  msin: '0000000013' }
            - { ue_id: UE13 ,  msin: '0000000014' }
            - { ue_id: UE14 ,  msin: '0000000015' }
            - { ue_id: UE15 ,  msin: '0000000016' }
            - { ue_id: UE16 ,  msin: '0000000017' }
            - { ue_id: UE17 ,  msin: '0000000018' }
            - { ue_id: UE18 ,  msin: '0000000019' }
            - { ue_id: UE19 ,  msin: '0000000020' }
            - { ue_id: UE20 ,  msin: '0000000021' }
            - { ue_id: UE21 ,  msin: '0000000022' }
            - { ue_id: UE22 ,  msin: '0000000023' }
            - { ue_id: UE23 ,  msin: '0000000024' }
            - { ue_id: UE24 ,  msin: '0000000025' }
            - { ue_id: UE25 ,  msin: '0000000026' }
            - { ue_id: UE26 ,  msin: '0000000027' }
            - { ue_id: UE27 ,  msin: '0000000028' }
            - { ue_id: UE28 ,  msin: '0000000029' }
            - { ue_id: UE29 ,  msin: '0000000030' }
            - { ue_id: UE30 ,  msin: '0000000031' }
            - { ue_id: UE31 ,  msin: '0000000032' }
            - { ue_id: UE32 ,  msin: '0000000033' }
            - { ue_id: UE33 ,  msin: '0000000034' }
            - { ue_id: UE34 ,  msin: '0000000035' }
            - { ue_id: UE35 ,  msin: '0000000036' }
            - { ue_id: UE36 ,  msin: '0000000037' }
            - { ue_id: UE37 ,  msin: '0000000038' }
            - { ue_id: UE38 ,  msin: '0000000039' }
            - { ue_id: UE39 ,  msin: '0000000040' }
            - { ue_id: UE40 ,  msin: '0000000041' }
            - { ue_id: UE41 ,  msin: '0000000042' }
            - { ue_id: UE42 ,  msin: '0000000043' }
            - { ue_id: UE43 ,  msin: '0000000044' }
            - { ue_id: UE44 ,  msin: '0000000045' }
            - { ue_id: UE45 ,  msin: '0000000046' }
            - { ue_id: UE46 ,  msin: '0000000047' }
            - { ue_id: UE47 ,  msin: '0000000048' }
            - { ue_id: UE48 ,  msin: '0000000049' }
            - { ue_id: UE49 ,  msin: '0000000050' }
            - { ue_id: UE50 ,  msin: '0000000051' }
            - { ue_id: UE51 ,  msin: '0000000052' }
            - { ue_id: UE52 ,  msin: '0000000053' }
            - { ue_id: UE53 ,  msin: '0000000054' }
            - { ue_id: UE54 ,  msin: '0000000055' }
            - { ue_id: UE55 ,  msin: '0000000056' }
            - { ue_id: UE56 ,  msin: '0000000057' }
            - { ue_id: UE57 ,  msin: '0000000058' }
            - { ue_id: UE58 ,  msin: '0000000059' }
            - { ue_id: UE59 ,  msin: '0000000060' }
            - { ue_id: UE60 ,  msin: '0000000061' }
            - { ue_id: UE61 ,  msin: '0000000062' }
            - { ue_id: UE62 ,  msin: '0000000063' }
            - { ue_id: UE63 ,  msin: '0000000064' }
            - { ue_id: UE64 ,  msin: '0000000065' }
            - { ue_id: UE65 ,  msin: '0000000066' }
            - { ue_id: UE66 ,  msin: '0000000067' }
            - { ue_id: UE67 ,  msin: '0000000068' }
            - { ue_id: UE68 ,  msin: '0000000069' }
            - { ue_id: UE69 ,  msin: '0000000070' }
            - { ue_id: UE70 ,  msin: '0000000071' }
            - { ue_id: UE71 ,  msin: '0000000072' }
            - { ue_id: UE72 ,  msin: '0000000073' }
            - { ue_id: UE73 ,  msin: '0000000074' }
            - { ue_id: UE74 ,  msin: '0000000075' }
            - { ue_id: UE75 ,  msin: '0000000076' }
            - { ue_id: UE76 ,  msin: '0000000077' }
            - { ue_id: UE77 ,  msin: '0000000078' }
            - { ue_id: UE78 ,  msin: '0000000079' }
            - { ue_id: UE79 ,  msin: '0000000080' }
            - { ue_id: UE80 ,  msin: '0000000081' }
            - { ue_id: UE81 ,  msin: '0000000082' }
            - { ue_id: UE82 ,  msin: '0000000083' }
            - { ue_id: UE83 ,  msin: '0000000084' }
            - { ue_id: UE84 ,  msin: '0000000085' }
            - { ue_id: UE85 ,  msin: '0000000086' }
            - { ue_id: UE86 ,  msin: '0000000087' }
            - { ue_id: UE87 ,  msin: '0000000088' }
            - { ue_id: UE88 ,  msin: '0000000089' }
            - { ue_id: UE89 ,  msin: '0000000090' }
            - { ue_id: UE90 ,  msin: '0000000091' }
            - { ue_id: UE91 ,  msin: '0000000092' }
            - { ue_id: UE92 ,  msin: '0000000093' }
            - { ue_id: UE93 ,  msin: '0000000094' }
            - { ue_id: UE94 ,  msin: '0000000095' }
            - { ue_id: UE95 ,  msin: '0000000096' }
            - { ue_id: UE96 ,  msin: '0000000097' }
            - { ue_id: UE97 ,  msin: '0000000098' }
            - { ue_id: UE98 ,  msin: '0000000099' }
            - { ue_id: UE99 ,  msin: '0000000100' }
    tasks:
        - fail: 
            msg: "'physical_network_interface' not found, this parameter is required!"
          when: physical_network_interface == ''

        - name  : Remove old instalation
          shell:  |
                rm -rf {{ BASE_DIR_INSTALL }}
                apt-get remove docker docker-engine docker.io docker-ce -y
                apt-get update
        
        - name  : Create dir instalation
          shell:  |
                mkdir {{ BASE_DIR_INSTALL }}
        
        - name  : Core Network Configuration - Build free5gc.conf
          copy:
            dest: "{{ BASE_DIR_INSTALL }}/free5gc.conf"
            content: |
                db_uri: mongodb://{{ MONGO_DB_container_name }}/free5gc
                logger:
                    file: /root/free5gc-stage-1/install/var/log/free5gc/free5gc.log
                    trace: 
                        app: 1
                        s1ap: 1
                        nas: 1
                        diameter: 1
                        gtp: 1
                        pfcp: 1
                        sbi: 1
                # 
                # parameter:
                #
                #  o Number of output streams per SCTP associations.
                #      sctp_streams: 30
                #
                #  o Disable use of IPv4 addresses (only IPv6)
                #      no_ipv4: true
                #
                #  o Disable use of IPv6 addresses (only IPv4)
                #      no_ipv6: true
                #
                #  o Prefer IPv4 instead of IPv6 for estabishing new GTP connections.
                #      prefer_ipv4: true
                #
                #  o Enable Multicast traffic to the UE
                #      multicast: true
                #
                #  o Disable Stateless Address Autoconfiguration for IPv6
                #      no_slaac: true
                #
                #
                parameter:
                    no_ipv6: true
                amf:
                    freeDiameter: amf.conf
                #
                #  <S1AP Server>>
                #
                #  o S1AP Server(all address avaiable)
                #    s1ap:
                #
                #  o S1AP Server(0.0.0.0:36412)
                #    s1ap:
                #      addr: 0.0.0.0
                #
                #  o S1AP Server(127.0.0.1:36412, [::1]:36412)
                #    s1ap:
                #      - addr: 127.0.0.1
                #      - addr: ::1
                #  o S1AP Server(different port)
                #    s1ap:
                #      - addr: 127.0.0.1
                #        port: 36413
                #
                #  o S1AP Server(address avaiable in `eth0` interface)
                #    s1ap:
                #      dev: eth0
                #
                    s1ap:
                    addr: {{ ip_address_AMF }}
                #
                #  <GUMMEI>
                #
                #  o Multiple GUMMEI
                #    gummei: 
                #      - plmn_id:
                #          mcc: 001
                #          mnc: 01
                #        mme_gid: 2
                #        mme_code: 1
                #      - plmn_id:
                #          - mcc: 002
                #            mnc: 02
                #          - mcc: 003
                #            mnc: 03
                #        mme_gid: [3, 4]
                #        mme_code:
                #          - 2
                #          - 3
                #
                    gummei: 
                    plmn_id:
                        mcc: 460
                        mnc: 99
                    mme_gid: 1
                    mme_code: 1
                #
                #  <TAI>
                #
                #  o Multiple TAI
                #    tai:
                #      - plmn_id:
                #          mcc: 001
                #          mnc: 01
                #        tac: [1, 2, 3]
                #    tai:
                #      - plmn_id:
                #          mcc: 002
                #          mnc: 02
                #        tac: 4
                #      - plmn_id:
                #          mcc: 003
                #          mnc: 03
                #        tac: 5
                #    tai:
                #      - plmn_id:
                #          mcc: 004
                #          mnc: 04
                #        tac: [6, 7]
                #      - plmn_id:
                #          mcc: 005
                #          mnc: 05
                #        tac: 8
                #      - plmn_id:
                #          mcc: 006
                #          mnc: 06
                #        tac: [9, 10]
                #
                    tai:
                    plmn_id:
                        mcc: 460
                        mnc: 99
                    tac: 1
                    security:
                        integrity_order : [ EIA1, EIA2, EIA0 ]
                        ciphering_order : [ EEA0, EEA1, EEA2 ]
                #
                #  <Network Name>
                #    network_name:
                #        full: free5GC
                #        short: free
                #
                    network_name:
                        full: free5GC
                hss:
                    freeDiameter: hss.conf
                pcrf:
                    freeDiameter: pcrf.conf
                smf:
                    freeDiameter: smf.conf
                    pfcp:
                    - addr: {{ ip_address_SMF }}
                    upf:
                    - addr: {{ ip_address_UPF }}
                    http:
                    addr: {{ ip_address_SMF }}
                    port: 8080
                #
                #  <UE Pool>
                #
                #  o IPv4 Pool
                #    $ sudo ip addr add 45.45.0.1/16 dev uptun
                #
                #    ue_pool:
                #      addr: 45.45.0.1/16
                #
                #  o IPv4/IPv6 Pool
                #    $ sudo ip addr add 45.45.0.1/16 dev uptun
                #    $ sudo ip addr add cafe:1::1/64 dev uptun
                #
                #    ue_pool:
                #      - addr: 45.45.0.1/16
                #      - addr: cafe:1::1/64
                #
                #
                #  o Specific APN(e.g 'volte') uses 45.46.0.1/16, cafe:2::1/64
                #    All other APNs use 45.45.0.1/16, cafe:1::1/64
                #    $ sudo ip addr add 45.45.0.1/16 dev uptun
                #    $ sudo ip addr add 45.46.0.1/16 dev uptun
                #    $ sudo ip addr add cafe:1::1/64 dev uptun
                #    $ sudo ip addr add cafe:2::1/64 dev uptun
                #
                #    ue_pool:
                #      - addr: 45.45.0.1/16
                #      - addr: cafe:1::1/64
                #      - addr: 45.46.0.1/16
                #        apn: volte
                #      - addr: cafe:2::1/64
                #        apn: volte
                #
                #  o Multiple Devices (default: uptun)
                #    $ sudo ip addr add 45.45.0.1/16 dev uptun
                #    $ sudo ip addr add cafe:1::1/64 dev uptun2
                #    $ sudo ip addr add 45.46.0.1/16 dev uptun3
                #    $ sudo ip addr add cafe:2::1/64 dev uptun3
                #
                #    ue_pool:
                #      - addr: 45.45.0.1/16
                #      - addr: cafe:1::1/64
                #        dev: uptun2
                #      - addr: 45.46.0.1/16
                #        apn: volte
                #        dev: uptun3
                #      - addr: cafe:2::1/64
                #        apn: volte
                #        dev: uptun3
                #
                    ue_pool:
                    - addr: 45.45.0.1/16
                #
                #  <Domain Name Server>
                #
                #  o Primary/Secondary can be configured. Others are ignored.
                #
                    dns:
                    - 8.8.8.8
                    - 8.8.4.4
                upf:
                    pfcp:
                    addr:
                        - {{ ip_address_UPF }}
                #
                #  <GTP-U Server>>
                #
                #  o GTP-U Server(127.0.0.3:2152, [::1]:2152)
                #    gtpu:
                #      - addr: 127.0.0.3
                #      - addr: ::1
                #
                #  o Same configuration(127.0.0.3:2152, [::1]:2152) as below.
                #    gtpu:
                #      name: localhost
                #
                    gtpu:
                    - addr: {{ ip_address_UPF }}
                    ue_pool:
                    - addr: 45.45.0.1/16
                    dns:
                    - 8.8.8.8
                    - 8.8.4.4
      
        - name  : Core Network Configuration - Build amf.conf
          copy:
            dest: "{{ BASE_DIR_INSTALL }}/amf.conf"
            content: |
                # This is a sample configuration file for freeDiameter daemon.
                
                # Most of the options can be omitted, as they default to reasonable values.
                # Only TLS-related options must be configured properly in usual setups.
                
                # It is possible to use "include" keyword to import additional files
                # e.g.: include "/etc/freeDiameter.d/*.conf"
                # This is exactly equivalent as copy & paste the content of the included file(s) 
                # where the "include" keyword is found.
                
                ##############################################################
                ##  Peer identity and realm 
                
                # The Diameter Identity of this daemon.
                # This must be a valid FQDN that resolves to the local host.
                # Default: hostname's FQDN
                #Identity = "aaa.koganei.freediameter.net";
                Identity = "amf.localdomain";
                
                # The Diameter Realm of this daemon.
                # Default: the domain part of Identity (after the first dot).
                #Realm = "koganei.freediameter.net";
                Realm = "localdomain";
                
                ##############################################################
                ##  Transport protocol configuration
                
                # The port this peer is listening on for incoming connections (TCP and SCTP).
                # Default: 3868. Use 0 to disable.
                #Port = 3868;
                
                # The port this peer is listening on for incoming TLS-protected connections (TCP and SCTP).
                # See TLS_old_method for more information about TLS flavours.
                # Note: we use TLS/SCTP instead of DTLS/SCTP at the moment. This will change in future version of freeDiameter.
                # Default: 5868. Use 0 to disable.
                #SecPort = 5868;
                
                # Use RFC3588 method for TLS protection, where TLS is negociated after CER/CEA exchange is completed 
                # on the unsecure connection. The alternative is RFC6733 mechanism, where TLS protects also the 
                # CER/CEA exchange on a dedicated secure port.
                # This parameter only affects outgoing connections. 
                # The setting can be also defined per-peer (see Peers configuration section).
                # Default: use RFC6733 method with separate port for TLS.
                #TLS_old_method;
                
                # Disable use of TCP protocol (only listen and connect over SCTP)
                # Default : TCP enabled
                #No_TCP;
                
                # Disable use of SCTP protocol (only listen and connect over TCP)
                # Default : SCTP enabled
                #No_SCTP;
                No_SCTP;
                # This option is ignored if freeDiameter is compiled with DISABLE_SCTP option.
                
                # Prefer TCP instead of SCTP for establishing new connections.
                # This setting may be overwritten per peer in peer configuration blocs.
                # Default : SCTP is attempted first.
                #Prefer_TCP;
                
                # Default number of streams per SCTP associations.
                # This setting may be overwritten per peer basis.
                # Default : 30 streams
                #SCTP_streams = 30;
                
                ##############################################################
                ##  Endpoint configuration
                
                # Disable use of IP addresses (only IPv6)
                # Default : IP enabled
                #No_IP;
                
                # Disable use of IPv6 addresses (only IP)
                # Default : IPv6 enabled
                #No_IPv6;
                
                # Specify local addresses the server must bind to
                # Default : listen on all addresses available.
                #ListenOn = "202.249.37.5";
                #ListenOn = "2001:200:903:2::202:1";
                #ListenOn = "fe80::21c:5ff:fe98:7d62%eth0";
                ListenOn = "{{ ip_address_AMF }}";
                
                
                ##############################################################
                ##  Server configuration
                
                # How many Diameter peers are allowed to be connecting at the same time ?
                # This parameter limits the number of incoming connections from the time
                # the connection is accepted until the first CER is received.
                # Default: 5 unidentified clients in paralel.
                #ThreadsPerServer = 5;
                
                ##############################################################
                ##  TLS Configuration
                
                # TLS is managed by the GNUTLS library in the freeDiameter daemon.
                # You may find more information about parameters and special behaviors
                # in the relevant documentation.
                # http://www.gnu.org/software/gnutls/manual/
                
                # Credentials of the local peer
                # The X509 certificate and private key file to use for the local peer.
                # The files must contain PKCS-1 encoded RSA key, in PEM format.
                # (These parameters are passed to gnutls_certificate_set_x509_key_file function)
                # Default : NO DEFAULT
                #TLS_Cred = "<x509 certif file.PEM>" , "<x509 private key file.PEM>";
                #TLS_Cred = "/etc/ssl/certs/freeDiameter.pem", "/etc/ssl/private/freeDiameter.key";
                TLS_Cred = "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/amf.cert.pem", "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/amf.key.pem";
                
                # Certificate authority / trust anchors
                # The file containing the list of trusted Certificate Authorities (PEM list)
                # (This parameter is passed to gnutls_certificate_set_x509_trust_file function)
                # The directive can appear several times to specify several files.
                # Default : GNUTLS default behavior
                #TLS_CA = "<file.PEM>";
                TLS_CA = "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/cacert.pem";
                
                # Certificate Revocation List file
                # The information about revoked certificates.
                # The file contains a list of trusted CRLs in PEM format. They should have been verified before. 
                # (This parameter is passed to gnutls_certificate_set_x509_crl_file function)
                # Note: openssl CRL format might have interoperability issue with GNUTLS format.
                # Default : GNUTLS default behavior
                #TLS_CRL = "<file.PEM>";
                
                # GNU TLS Priority string
                # This string allows to configure the behavior of GNUTLS key exchanges 
                # algorithms. See gnutls_priority_init function documentation for information.
                # You should also refer to the Diameter required TLS support here:
                #   http://tools.ietf.org/html/rfc6733#section-13.1
                # Default : "NORMAL"
                # Example: TLS_Prio = "NONE:+VERS-TLS1.1:+AES-128-CBC:+RSA:+SHA1:+COMP-NULL";
                #TLS_Prio = "NORMAL";
                
                # Diffie-Hellman parameters size
                # Set the number of bits for generated DH parameters
                # Valid value should be 768, 1024, 2048, 3072 or 4096.
                # (This parameter is passed to gnutls_dh_params_generate2 function, 
                # it usually should match RSA key size)
                # Default : 1024
                #TLS_DH_Bits = 1024;
                
                # Alternatively, you can specify a file to load the PKCS#3 encoded
                # DH parameters directly from. This accelerates the daemon start 
                # but is slightly less secure. If this file is provided, the
                # TLS_DH_Bits parameters has no effect.
                # Default : no default.
                #TLS_DH_File = "<file.PEM>";
                
                ##############################################################
                ##  Timers configuration
                
                # The Tc timer of this peer.
                # It is the delay before a new attempt is made to reconnect a disconnected peer.
                # The value is expressed in seconds. The recommended value is 30 seconds.
                # Default: 30
                #TcTimer = 30;
                
                # The Tw timer of this peer.
                # It is the delay before a watchdog message is sent, as described in RFC 3539.
                # The value is expressed in seconds. The default value is 30 seconds. Value must
                # be greater or equal to 6 seconds. See details in the RFC.
                # Default: 30
                #TwTimer = 30;
                
                ##############################################################
                ##  Applications configuration
                
                # Disable the relaying of Diameter messages?
                # For messages not handled locally, the default behavior is to forward the
                # message to another peer if any is available, according to the routing 
                # algorithms. In addition the "0xffffff" application is advertised in CER/CEA 
                # exchanges.
                # Default: Relaying is enabled.
                #NoRelay;
                
                # Number of server threads that can handle incoming messages at the same time.
                # Default: 4
                #AppServThreads = 4;
                
                # Other applications are configured by loaded extensions.
                
                ##############################################################
                ##  Extensions configuration
                
                #  The freeDiameter framework merely provides support for
                # Diameter Base Protocol. The specific application behaviors,
                # as well as advanced functions, are provided
                # by loadable extensions (plug-ins).
                #  These extensions may in addition receive the name of a 
                # configuration file, the format of which is extension-specific.
                #
                # Format:
                #LoadExtension = "/path/to/extension" [ : "/optional/configuration/file" ] ;
                #
                # Examples:
                #LoadExtension = "extensions/sample.fdx";
                #LoadExtension = "extensions/sample.fdx":"conf/sample.conf";
                
                # Extensions are named as follow:
                # dict_* for extensions that add content to the dictionary definitions.
                # dbg_*  for extensions useful only to retrieve more information on the framework execution.
                # acl_*  : Access control list, to control which peers are allowed to connect.
                # rt_*   : routing extensions that impact how messages are forwarded to other peers.
                # app_*  : applications, these extensions usually register callbacks to handle specific messages.
                # test_* : dummy extensions that are useful only in testing environments.
                
                
                # The dbg_msg_dump.fdx extension allows you to tweak the way freeDiameter displays some
                # information about some events. This extension does not actually use a configuration file
                # but receives directly a parameter in the string passed to the extension. Here are some examples:
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x1111"; # Removes all default hooks, very quiet even in case of errors.
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x2222"; # Display all events with few details.
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x0080"; # Dump complete information about sent and received messages.
                # The four digits respectively control: connections, routing decisions, sent/received messages, errors.
                # The values for each digit are:
                #  0 - default - keep the default behavior
                #  1 - quiet   - remove any specific log
                #  2 - compact - display only a summary of the information
                #  4 - full    - display the complete information on a single long line
                #  8 - tree    - display the complete information in an easier to read format spanning several lines.
                
                LoadExtension = "dbg_msg_dumps.so" : "0x8888";
                LoadExtension = "dict_rfc5777.so";
                LoadExtension = "dict_mip6i.so";
                LoadExtension = "dict_nasreq.so";
                LoadExtension = "dict_nas_mipv6.so";
                LoadExtension = "dict_dcca.so";
                LoadExtension = "dict_dcca_3gpp.so";
                LoadExtension = "dict_s6a.so";
                
                ##############################################################
                ##  Peers configuration
                
                #  The local server listens for incoming connections. By default,
                # all unknown connecting peers are rejected. Extensions can override this behavior (e.g., acl_wl).
                # 
                #  In addition to incoming connections, the local peer can
                # be configured to establish and maintain connections to some 
                # Diameter nodes and allow connections from these nodes.
                #  This is achieved with the ConnectPeer directive described below.
                #
                # Note that the configured Diameter Identity MUST match
                # the information received inside CEA, or the connection will be aborted.
                #
                # Format:
                #ConnectPeer = "diameterid" [ { parameter1; parameter2; ...} ] ;
                # Parameters that can be specified in the peer's parameter list:
                #  No_TCP; No_SCTP; No_IP; No_IPv6; Prefer_TCP; TLS_old_method;
                #  No_TLS;       # assume transparent security instead of TLS. DTLS is not supported yet (will change in future versions).
                #  Port = 5868;  # The port to connect to
                #  TcTimer = 30;
                #  TwTimer = 30;
                #  ConnectTo = "202.249.37.5";
                #  ConnectTo = "2001:200:903:2::202:1";
                #  TLS_Prio = "NORMAL";
                #  Realm = "realm.net"; # Reject the peer if it does not advertise this realm.
                # Examples:
                #ConnectPeer = "aaa.wide.ad.jp";
                #ConnectPeer = "old.diameter.serv" { TcTimer = 60; TLS_old_method; No_SCTP; Port=3868; } ;
                ConnectPeer = "hss.localdomain" { ConnectTo = "{{ ip_address_HSS }}"; No_TLS; };
                
                ##############################################################
                
        - name  : Core Network Configuration - Build smf.conf
          copy:
            dest: "{{ BASE_DIR_INSTALL }}/smf.conf"
            content: |
                # This is a sample configuration file for freeDiameter daemon.
        
                # Most of the options can be omitted, as they default to reasonable values.
                # Only TLS-related options must be configured properly in usual setups.
                
                # It is possible to use "include" keyword to import additional files
                # e.g.: include "/etc/freeDiameter.d/*.conf"
                # This is exactly equivalent as copy & paste the content of the included file(s) 
                # where the "include" keyword is found.
                
                
                ##############################################################
                ##  Peer identity and realm 
                
                # The Diameter Identity of this daemon.
                # This must be a valid FQDN that resolves to the local host.
                # Default: hostname's FQDN
                #Identity = "aaa.koganei.freediameter.net";
                Identity = "smf.localdomain";
                
                # The Diameter Realm of this daemon.
                # Default: the domain part of Identity (after the first dot).
                #Realm = "koganei.freediameter.net";
                Realm = "localdomain";
                
                ##############################################################
                ##  Transport protocol configuration
                
                # The port this peer is listening on for incoming connections (TCP and SCTP).
                # Default: 3868. Use 0 to disable.
                #Port = 3868;
                
                # The port this peer is listening on for incoming TLS-protected connections (TCP and SCTP).
                # See TLS_old_method for more information about TLS flavours.
                # Note: we use TLS/SCTP instead of DTLS/SCTP at the moment. This will change in future version of freeDiameter.
                # Default: 5868. Use 0 to disable.
                #SecPort = 5868;
                
                # Use RFC3588 method for TLS protection, where TLS is negociated after CER/CEA exchange is completed 
                # on the unsecure connection. The alternative is RFC6733 mechanism, where TLS protects also the 
                # CER/CEA exchange on a dedicated secure port.
                # This parameter only affects outgoing connections. 
                # The setting can be also defined per-peer (see Peers configuration section).
                # Default: use RFC6733 method with separate port for TLS.
                #TLS_old_method;
                
                # Disable use of TCP protocol (only listen and connect over SCTP)
                # Default : TCP enabled
                #No_TCP;
                
                # Disable use of SCTP protocol (only listen and connect over TCP)
                # Default : SCTP enabled
                #No_SCTP;
                No_SCTP;
                # This option is ignored if freeDiameter is compiled with DISABLE_SCTP option.
                
                # Prefer TCP instead of SCTP for establishing new connections.
                # This setting may be overwritten per peer in peer configuration blocs.
                # Default : SCTP is attempted first.
                #Prefer_TCP;
                
                # Default number of streams per SCTP associations.
                # This setting may be overwritten per peer basis.
                # Default : 30 streams
                #SCTP_streams = 30;
                
                ##############################################################
                ##  Endpoint configuration
                
                # Disable use of IP addresses (only IPv6)
                # Default : IP enabled
                #No_IP;
                
                # Disable use of IPv6 addresses (only IP)
                # Default : IPv6 enabled
                #No_IPv6;
                
                # Specify local addresses the server must bind to
                # Default : listen on all addresses available.
                #ListenOn = "202.249.37.5";
                #ListenOn = "2001:200:903:2::202:1";
                #ListenOn = "fe80::21c:5ff:fe98:7d62%eth0";
                ListenOn = "{{ ip_address_SMF }}";
                
                
                ##############################################################
                ##  Server configuration
                
                # How many Diameter peers are allowed to be connecting at the same time ?
                # This parameter limits the number of incoming connections from the time
                # the connection is accepted until the first CER is received.
                # Default: 5 unidentified clients in paralel.
                #ThreadsPerServer = 5;
                
                ##############################################################
                ##  TLS Configuration
                
                # TLS is managed by the GNUTLS library in the freeDiameter daemon.
                # You may find more information about parameters and special behaviors
                # in the relevant documentation.
                # http://www.gnu.org/software/gnutls/manual/
                
                # Credentials of the local peer
                # The X509 certificate and private key file to use for the local peer.
                # The files must contain PKCS-1 encoded RSA key, in PEM format.
                # (These parameters are passed to gnutls_certificate_set_x509_key_file function)
                # Default : NO DEFAULT
                #TLS_Cred = "<x509 certif file.PEM>" , "<x509 private key file.PEM>";
                #TLS_Cred = "/etc/ssl/certs/freeDiameter.pem", "/etc/ssl/private/freeDiameter.key";
                TLS_Cred = "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/smf.cert.pem", "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/smf.key.pem";
                
                # Certificate authority / trust anchors
                # The file containing the list of trusted Certificate Authorities (PEM list)
                # (This parameter is passed to gnutls_certificate_set_x509_trust_file function)
                # The directive can appear several times to specify several files.
                # Default : GNUTLS default behavior
                #TLS_CA = "<file.PEM>";
                TLS_CA = "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/cacert.pem";
                
                # Certificate Revocation List file
                # The information about revoked certificates.
                # The file contains a list of trusted CRLs in PEM format. They should have been verified before. 
                # (This parameter is passed to gnutls_certificate_set_x509_crl_file function)
                # Note: openssl CRL format might have interoperability issue with GNUTLS format.
                # Default : GNUTLS default behavior
                #TLS_CRL = "<file.PEM>";
                
                # GNU TLS Priority string
                # This string allows to configure the behavior of GNUTLS key exchanges 
                # algorithms. See gnutls_priority_init function documentation for information.
                # You should also refer to the Diameter required TLS support here:
                #   http://tools.ietf.org/html/rfc6733#section-13.1
                # Default : "NORMAL"
                # Example: TLS_Prio = "NONE:+VERS-TLS1.1:+AES-128-CBC:+RSA:+SHA1:+COMP-NULL";
                #TLS_Prio = "NORMAL";
                
                # Diffie-Hellman parameters size
                # Set the number of bits for generated DH parameters
                # Valid value should be 768, 1024, 2048, 3072 or 4096.
                # (This parameter is passed to gnutls_dh_params_generate2 function, 
                # it usually should match RSA key size)
                # Default : 1024
                #TLS_DH_Bits = 1024;
                
                # Alternatively, you can specify a file to load the PKCS#3 encoded
                # DH parameters directly from. This accelerates the daemon start 
                # but is slightly less secure. If this file is provided, the
                # TLS_DH_Bits parameters has no effect.
                # Default : no default.
                #TLS_DH_File = "<file.PEM>";
                
                
                ##############################################################
                ##  Timers configuration
                
                # The Tc timer of this peer.
                # It is the delay before a new attempt is made to reconnect a disconnected peer.
                # The value is expressed in seconds. The recommended value is 30 seconds.
                # Default: 30
                #TcTimer = 30;
                
                # The Tw timer of this peer.
                # It is the delay before a watchdog message is sent, as described in RFC 3539.
                # The value is expressed in seconds. The default value is 30 seconds. Value must
                # be greater or equal to 6 seconds. See details in the RFC.
                # Default: 30
                #TwTimer = 30;
                
                ##############################################################
                ##  Applications configuration
                
                # Disable the relaying of Diameter messages?
                # For messages not handled locally, the default behavior is to forward the
                # message to another peer if any is available, according to the routing 
                # algorithms. In addition the "0xffffff" application is advertised in CER/CEA 
                # exchanges.
                # Default: Relaying is enabled.
                #NoRelay;
                
                # Number of server threads that can handle incoming messages at the same time.
                # Default: 4
                #AppServThreads = 4;
                
                # Other applications are configured by loaded extensions.
                
                ##############################################################
                ##  Extensions configuration
                
                #  The freeDiameter framework merely provides support for
                # Diameter Base Protocol. The specific application behaviors,
                # as well as advanced functions, are provided
                # by loadable extensions (plug-ins).
                #  These extensions may in addition receive the name of a 
                # configuration file, the format of which is extension-specific.
                #
                # Format:
                #LoadExtension = "/path/to/extension" [ : "/optional/configuration/file" ] ;
                #
                # Examples:
                #LoadExtension = "extensions/sample.fdx";
                #LoadExtension = "extensions/sample.fdx":"conf/sample.conf";
                
                # Extensions are named as follow:
                # dict_* for extensions that add content to the dictionary definitions.
                # dbg_*  for extensions useful only to retrieve more information on the framework execution.
                # acl_*  : Access control list, to control which peers are allowed to connect.
                # rt_*   : routing extensions that impact how messages are forwarded to other peers.
                # app_*  : applications, these extensions usually register callbacks to handle specific messages.
                # test_* : dummy extensions that are useful only in testing environments.
                
                
                # The dbg_msg_dump.fdx extension allows you to tweak the way freeDiameter displays some
                # information about some events. This extension does not actually use a configuration file
                # but receives directly a parameter in the string passed to the extension. Here are some examples:
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x1111"; # Removes all default hooks, very quiet even in case of errors.
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x2222"; # Display all events with few details.
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x0080"; # Dump complete information about sent and received messages.
                # The four digits respectively control: connections, routing decisions, sent/received messages, errors.
                # The values for each digit are:
                #  0 - default - keep the default behavior
                #  1 - quiet   - remove any specific log
                #  2 - compact - display only a summary of the information
                #  4 - full    - display the complete information on a single long line
                #  8 - tree    - display the complete information in an easier to read format spanning several lines.
                
                LoadExtension = "dbg_msg_dumps.so" : "0x8888";
                LoadExtension = "dict_rfc5777.so";
                LoadExtension = "dict_mip6i.so";
                LoadExtension = "dict_nasreq.so";
                LoadExtension = "dict_nas_mipv6.so";
                LoadExtension = "dict_dcca.so";
                LoadExtension = "dict_dcca_3gpp.so";
                
                
                ##############################################################
                ##  Peers configuration
                
                #  The local server listens for incoming connections. By default,
                # all unknown connecting peers are rejected. Extensions can override this behavior (e.g., acl_wl).
                # 
                #  In addition to incoming connections, the local peer can
                # be configured to establish and maintain connections to some 
                # Diameter nodes and allow connections from these nodes.
                #  This is achieved with the ConnectPeer directive described below.
                #
                # Note that the configured Diameter Identity MUST match
                # the information received inside CEA, or the connection will be aborted.
                #
                # Format:
                #ConnectPeer = "diameterid" [ { parameter1; parameter2; ...} ] ;
                # Parameters that can be specified in the peer's parameter list:
                #  No_TCP; No_SCTP; No_IP; No_IPv6; Prefer_TCP; TLS_old_method;
                #  No_TLS;       # assume transparent security instead of TLS. DTLS is not supported yet (will change in future versions).
                #  Port = 5868;  # The port to connect to
                #  TcTimer = 30;
                #  TwTimer = 30;
                #  ConnectTo = "202.249.37.5";
                #  ConnectTo = "2001:200:903:2::202:1";
                #  TLS_Prio = "NORMAL";
                #  Realm = "realm.net"; # Reject the peer if it does not advertise this realm.
                # Examples:
                #ConnectPeer = "aaa.wide.ad.jp";
                #ConnectPeer = "old.diameter.serv" { TcTimer = 60; TLS_old_method; No_SCTP; Port=3868; } ;
                ConnectPeer = "pcrf.localdomain" { ConnectTo = "{{ ip_address_PCRF }}"; No_TLS; };
                
                
                ##############################################################
                
        - name  : Core Network Configuration - Build hss.conf
          copy:
            dest: "{{ BASE_DIR_INSTALL }}/hss.conf"
            content: |
                # This is a sample configuration file for freeDiameter daemon.
        
                # Most of the options can be omitted, as they default to reasonable values.
                # Only TLS-related options must be configured properly in usual setups.
                
                # It is possible to use "include" keyword to import additional files
                # e.g.: include "/etc/freeDiameter.d/*.conf"
                # This is exactly equivalent as copy & paste the content of the included file(s) 
                # where the "include" keyword is found.
                
                
                ##############################################################
                ##  Peer identity and realm 
                
                # The Diameter Identity of this daemon.
                # This must be a valid FQDN that resolves to the local host.
                # Default: hostname's FQDN
                #Identity = "aaa.koganei.freediameter.net";
                Identity = "hss.localdomain";
                
                # The Diameter Realm of this daemon.
                # Default: the domain part of Identity (after the first dot).
                #Realm = "koganei.freediameter.net";
                Realm = "localdomain";
                
                ##############################################################
                ##  Transport protocol configuration
                
                # The port this peer is listening on for incoming connections (TCP and SCTP).
                # Default: 3868. Use 0 to disable.
                #Port = 3868;
                
                # The port this peer is listening on for incoming TLS-protected connections (TCP and SCTP).
                # See TLS_old_method for more information about TLS flavours.
                # Note: we use TLS/SCTP instead of DTLS/SCTP at the moment. This will change in future version of freeDiameter.
                # Default: 5868. Use 0 to disable.
                #SecPort = 5868;
                
                # Use RFC3588 method for TLS protection, where TLS is negociated after CER/CEA exchange is completed 
                # on the unsecure connection. The alternative is RFC6733 mechanism, where TLS protects also the 
                # CER/CEA exchange on a dedicated secure port.
                # This parameter only affects outgoing connections. 
                # The setting can be also defined per-peer (see Peers configuration section).
                # Default: use RFC6733 method with separate port for TLS.
                #TLS_old_method;
                
                # Disable use of TCP protocol (only listen and connect over SCTP)
                # Default : TCP enabled
                #No_TCP;
                
                # Disable use of SCTP protocol (only listen and connect over TCP)
                # Default : SCTP enabled
                #No_SCTP;
                No_SCTP;
                # This option is ignored if freeDiameter is compiled with DISABLE_SCTP option.
                
                # Prefer TCP instead of SCTP for establishing new connections.
                # This setting may be overwritten per peer in peer configuration blocs.
                # Default : SCTP is attempted first.
                #Prefer_TCP;
                
                # Default number of streams per SCTP associations.
                # This setting may be overwritten per peer basis.
                # Default : 30 streams
                #SCTP_streams = 30;
                
                ##############################################################
                ##  Endpoint configuration
                
                # Disable use of IP addresses (only IPv6)
                # Default : IP enabled
                #No_IP;
                
                # Disable use of IPv6 addresses (only IP)
                # Default : IPv6 enabled
                #No_IPv6;
                
                # Specify local addresses the server must bind to
                # Default : listen on all addresses available.
                #ListenOn = "202.249.37.5";
                #ListenOn = "2001:200:903:2::202:1";
                #ListenOn = "fe80::21c:5ff:fe98:7d62%eth0";
                ListenOn = "{{ ip_address_HSS }}";
                
                
                ##############################################################
                ##  Server configuration
                
                # How many Diameter peers are allowed to be connecting at the same time ?
                # This parameter limits the number of incoming connections from the time
                # the connection is accepted until the first CER is received.
                # Default: 5 unidentified clients in paralel.
                #ThreadsPerServer = 5;
                
                ##############################################################
                ##  TLS Configuration
                
                # TLS is managed by the GNUTLS library in the freeDiameter daemon.
                # You may find more information about parameters and special behaviors
                # in the relevant documentation.
                # http://www.gnu.org/software/gnutls/manual/
                
                # Credentials of the local peer
                # The X509 certificate and private key file to use for the local peer.
                # The files must contain PKCS-1 encoded RSA key, in PEM format.
                # (These parameters are passed to gnutls_certificate_set_x509_key_file function)
                # Default : NO DEFAULT
                #TLS_Cred = "<x509 certif file.PEM>" , "<x509 private key file.PEM>";
                #TLS_Cred = "/etc/ssl/certs/freeDiameter.pem", "/etc/ssl/private/freeDiameter.key";
                TLS_Cred = "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/hss.cert.pem", "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/hss.key.pem";
                
                # Certificate authority / trust anchors
                # The file containing the list of trusted Certificate Authorities (PEM list)
                # (This parameter is passed to gnutls_certificate_set_x509_trust_file function)
                # The directive can appear several times to specify several files.
                # Default : GNUTLS default behavior
                #TLS_CA = "<file.PEM>";
                TLS_CA = "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/cacert.pem";
                
                # Certificate Revocation List file
                # The information about revoked certificates.
                # The file contains a list of trusted CRLs in PEM format. They should have been verified before. 
                # (This parameter is passed to gnutls_certificate_set_x509_crl_file function)
                # Note: openssl CRL format might have interoperability issue with GNUTLS format.
                # Default : GNUTLS default behavior
                #TLS_CRL = "<file.PEM>";
                
                # GNU TLS Priority string
                # This string allows to configure the behavior of GNUTLS key exchanges 
                # algorithms. See gnutls_priority_init function documentation for information.
                # You should also refer to the Diameter required TLS support here:
                #   http://tools.ietf.org/html/rfc6733#section-13.1
                # Default : "NORMAL"
                # Example: TLS_Prio = "NONE:+VERS-TLS1.1:+AES-128-CBC:+RSA:+SHA1:+COMP-NULL";
                #TLS_Prio = "NORMAL";
                
                # Diffie-Hellman parameters size
                # Set the number of bits for generated DH parameters
                # Valid value should be 768, 1024, 2048, 3072 or 4096.
                # (This parameter is passed to gnutls_dh_params_generate2 function, 
                # it usually should match RSA key size)
                # Default : 1024
                #TLS_DH_Bits = 1024;
                
                # Alternatively, you can specify a file to load the PKCS#3 encoded
                # DH parameters directly from. This accelerates the daemon start 
                # but is slightly less secure. If this file is provided, the
                # TLS_DH_Bits parameters has no effect.
                # Default : no default.
                #TLS_DH_File = "<file.PEM>";
                
                
                ##############################################################
                ##  Timers configuration
                
                # The Tc timer of this peer.
                # It is the delay before a new attempt is made to reconnect a disconnected peer.
                # The value is expressed in seconds. The recommended value is 30 seconds.
                # Default: 30
                #TcTimer = 30;
                
                # The Tw timer of this peer.
                # It is the delay before a watchdog message is sent, as described in RFC 3539.
                # The value is expressed in seconds. The default value is 30 seconds. Value must
                # be greater or equal to 6 seconds. See details in the RFC.
                # Default: 30
                #TwTimer = 30;
                
                ##############################################################
                ##  Applications configuration
                
                # Disable the relaying of Diameter messages?
                # For messages not handled locally, the default behavior is to forward the
                # message to another peer if any is available, according to the routing 
                # algorithms. In addition the "0xffffff" application is advertised in CER/CEA 
                # exchanges.
                # Default: Relaying is enabled.
                #NoRelay;
                
                # Number of server threads that can handle incoming messages at the same time.
                # Default: 4
                #AppServThreads = 4;
                
                # Other applications are configured by loaded extensions.
                
                ##############################################################
                ##  Extensions configuration
                
                #  The freeDiameter framework merely provides support for
                # Diameter Base Protocol. The specific application behaviors,
                # as well as advanced functions, are provided
                # by loadable extensions (plug-ins).
                #  These extensions may in addition receive the name of a 
                # configuration file, the format of which is extension-specific.
                #
                # Format:
                #LoadExtension = "/path/to/extension" [ : "/optional/configuration/file" ] ;
                #
                # Examples:
                #LoadExtension = "extensions/sample.fdx";
                #LoadExtension = "extensions/sample.fdx":"conf/sample.conf";
                
                # Extensions are named as follow:
                # dict_* for extensions that add content to the dictionary definitions.
                # dbg_*  for extensions useful only to retrieve more information on the framework execution.
                # acl_*  : Access control list, to control which peers are allowed to connect.
                # rt_*   : routing extensions that impact how messages are forwarded to other peers.
                # app_*  : applications, these extensions usually register callbacks to handle specific messages.
                # test_* : dummy extensions that are useful only in testing environments.
                
                
                # The dbg_msg_dump.fdx extension allows you to tweak the way freeDiameter displays some
                # information about some events. This extension does not actually use a configuration file
                # but receives directly a parameter in the string passed to the extension. Here are some examples:
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x1111"; # Removes all default hooks, very quiet even in case of errors.
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x2222"; # Display all events with few details.
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x0080"; # Dump complete information about sent and received messages.
                # The four digits respectively control: connections, routing decisions, sent/received messages, errors.
                # The values for each digit are:
                #  0 - default - keep the default behavior
                #  1 - quiet   - remove any specific log
                #  2 - compact - display only a summary of the information
                #  4 - full    - display the complete information on a single long line
                #  8 - tree    - display the complete information in an easier to read format spanning several lines.
                
                LoadExtension = "dbg_msg_dumps.so" : "0x8888";
                LoadExtension = "dict_rfc5777.so";
                LoadExtension = "dict_mip6i.so";
                LoadExtension = "dict_nasreq.so";
                LoadExtension = "dict_nas_mipv6.so";
                LoadExtension = "dict_dcca.so";
                LoadExtension = "dict_dcca_3gpp.so";
                LoadExtension = "dict_s6a.so";
                
                
                ##############################################################
                ##  Peers configuration
                
                #  The local server listens for incoming connections. By default,
                # all unknown connecting peers are rejected. Extensions can override this behavior (e.g., acl_wl).
                # 
                #  In addition to incoming connections, the local peer can
                # be configured to establish and maintain connections to some 
                # Diameter nodes and allow connections from these nodes.
                #  This is achieved with the ConnectPeer directive described below.
                #
                # Note that the configured Diameter Identity MUST match
                # the information received inside CEA, or the connection will be aborted.
                #
                # Format:
                #ConnectPeer = "diameterid" [ { parameter1; parameter2; ...} ] ;
                # Parameters that can be specified in the peer's parameter list:
                #  No_TCP; No_SCTP; No_IP; No_IPv6; Prefer_TCP; TLS_old_method;
                #  No_TLS;       # assume transparent security instead of TLS. DTLS is not supported yet (will change in future versions).
                #  Port = 5868;  # The port to connect to
                #  TcTimer = 30;
                #  TwTimer = 30;
                #  ConnectTo = "202.249.37.5";
                #  ConnectTo = "2001:200:903:2::202:1";
                #  TLS_Prio = "NORMAL";
                #  Realm = "realm.net"; # Reject the peer if it does not advertise this realm.
                # Examples:
                #ConnectPeer = "aaa.wide.ad.jp";
                #ConnectPeer = "old.diameter.serv" { TcTimer = 60; TLS_old_method; No_SCTP; Port=3868; } ;
                ConnectPeer = "amf.localdomain" { ConnectTo = "{{ ip_address_AMF }}"; No_TLS; };
                
                ##############################################################
                
        - name  : Core Network Configuration - Build pcrf.conf
          copy:
            dest: "{{ BASE_DIR_INSTALL }}/pcrf.conf"
            content: |
                # This is a sample configuration file for freeDiameter daemon.
        
                # Most of the options can be omitted, as they default to reasonable values.
                # Only TLS-related options must be configured properly in usual setups.
                
                # It is possible to use "include" keyword to import additional files
                # e.g.: include "/etc/freeDiameter.d/*.conf"
                # This is exactly equivalent as copy & paste the content of the included file(s) 
                # where the "include" keyword is found.
                
                
                ##############################################################
                ##  Peer identity and realm 
                
                # The Diameter Identity of this daemon.
                # This must be a valid FQDN that resolves to the local host.
                # Default: hostname's FQDN
                #Identity = "aaa.koganei.freediameter.net";
                Identity = "pcrf.localdomain";
                
                # The Diameter Realm of this daemon.
                # Default: the domain part of Identity (after the first dot).
                #Realm = "koganei.freediameter.net";
                Realm = "localdomain";
                
                ##############################################################
                ##  Transport protocol configuration
                
                # The port this peer is listening on for incoming connections (TCP and SCTP).
                # Default: 3868. Use 0 to disable.
                #Port = 3868;
                
                # The port this peer is listening on for incoming TLS-protected connections (TCP and SCTP).
                # See TLS_old_method for more information about TLS flavours.
                # Note: we use TLS/SCTP instead of DTLS/SCTP at the moment. This will change in future version of freeDiameter.
                # Default: 5868. Use 0 to disable.
                #SecPort = 5868;
                
                # Use RFC3588 method for TLS protection, where TLS is negociated after CER/CEA exchange is completed 
                # on the unsecure connection. The alternative is RFC6733 mechanism, where TLS protects also the 
                # CER/CEA exchange on a dedicated secure port.
                # This parameter only affects outgoing connections. 
                # The setting can be also defined per-peer (see Peers configuration section).
                # Default: use RFC6733 method with separate port for TLS.
                #TLS_old_method;
                
                # Disable use of TCP protocol (only listen and connect over SCTP)
                # Default : TCP enabled
                #No_TCP;
                
                # Disable use of SCTP protocol (only listen and connect over TCP)
                # Default : SCTP enabled
                #No_SCTP;
                No_SCTP;
                # This option is ignored if freeDiameter is compiled with DISABLE_SCTP option.
                
                # Prefer TCP instead of SCTP for establishing new connections.
                # This setting may be overwritten per peer in peer configuration blocs.
                # Default : SCTP is attempted first.
                #Prefer_TCP;
                
                # Default number of streams per SCTP associations.
                # This setting may be overwritten per peer basis.
                # Default : 30 streams
                #SCTP_streams = 30;
                
                ##############################################################
                ##  Endpoint configuration
                
                # Disable use of IP addresses (only IPv6)
                # Default : IP enabled
                #No_IP;
                
                # Disable use of IPv6 addresses (only IP)
                # Default : IPv6 enabled
                #No_IPv6;
                
                # Specify local addresses the server must bind to
                # Default : listen on all addresses available.
                #ListenOn = "202.249.37.5";
                #ListenOn = "2001:200:903:2::202:1";
                #ListenOn = "fe80::21c:5ff:fe98:7d62%eth0";
                ListenOn = "{{ ip_address_PCRF }}";
            
                
                ##############################################################
                ##  Server configuration
                
                # How many Diameter peers are allowed to be connecting at the same time ?
                # This parameter limits the number of incoming connections from the time
                # the connection is accepted until the first CER is received.
                # Default: 5 unidentified clients in paralel.
                #ThreadsPerServer = 5;
                
                ##############################################################
                ##  TLS Configuration
                
                # TLS is managed by the GNUTLS library in the freeDiameter daemon.
                # You may find more information about parameters and special behaviors
                # in the relevant documentation.
                # http://www.gnu.org/software/gnutls/manual/
                
                # Credentials of the local peer
                # The X509 certificate and private key file to use for the local peer.
                # The files must contain PKCS-1 encoded RSA key, in PEM format.
                # (These parameters are passed to gnutls_certificate_set_x509_key_file function)
                # Default : NO DEFAULT
                #TLS_Cred = "<x509 certif file.PEM>" , "<x509 private key file.PEM>";
                #TLS_Cred = "/etc/ssl/certs/freeDiameter.pem", "/etc/ssl/private/freeDiameter.key";
                TLS_Cred = "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/pcrf.cert.pem", "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/pcrf.key.pem";
                
                # Certificate authority / trust anchors
                # The file containing the list of trusted Certificate Authorities (PEM list)
                # (This parameter is passed to gnutls_certificate_set_x509_trust_file function)
                # The directive can appear several times to specify several files.
                # Default : GNUTLS default behavior
                #TLS_CA = "<file.PEM>";
                TLS_CA = "/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/cacert.pem";
                
                # Certificate Revocation List file
                # The information about revoked certificates.
                # The file contains a list of trusted CRLs in PEM format. They should have been verified before. 
                # (This parameter is passed to gnutls_certificate_set_x509_crl_file function)
                # Note: openssl CRL format might have interoperability issue with GNUTLS format.
                # Default : GNUTLS default behavior
                #TLS_CRL = "<file.PEM>";
                
                # GNU TLS Priority string
                # This string allows to configure the behavior of GNUTLS key exchanges 
                # algorithms. See gnutls_priority_init function documentation for information.
                # You should also refer to the Diameter required TLS support here:
                #   http://tools.ietf.org/html/rfc6733#section-13.1
                # Default : "NORMAL"
                # Example: TLS_Prio = "NONE:+VERS-TLS1.1:+AES-128-CBC:+RSA:+SHA1:+COMP-NULL";
                #TLS_Prio = "NORMAL";
                
                # Diffie-Hellman parameters size
                # Set the number of bits for generated DH parameters
                # Valid value should be 768, 1024, 2048, 3072 or 4096.
                # (This parameter is passed to gnutls_dh_params_generate2 function, 
                # it usually should match RSA key size)
                # Default : 1024
                #TLS_DH_Bits = 1024;
                
                # Alternatively, you can specify a file to load the PKCS#3 encoded
                # DH parameters directly from. This accelerates the daemon start 
                # but is slightly less secure. If this file is provided, the
                # TLS_DH_Bits parameters has no effect.
                # Default : no default.
                #TLS_DH_File = "<file.PEM>";
                
                
                ##############################################################
                ##  Timers configuration
                
                # The Tc timer of this peer.
                # It is the delay before a new attempt is made to reconnect a disconnected peer.
                # The value is expressed in seconds. The recommended value is 30 seconds.
                # Default: 30
                #TcTimer = 30;
                
                # The Tw timer of this peer.
                # It is the delay before a watchdog message is sent, as described in RFC 3539.
                # The value is expressed in seconds. The default value is 30 seconds. Value must
                # be greater or equal to 6 seconds. See details in the RFC.
                # Default: 30
                #TwTimer = 30;
                
                ##############################################################
                ##  Applications configuration
                
                # Disable the relaying of Diameter messages?
                # For messages not handled locally, the default behavior is to forward the
                # message to another peer if any is available, according to the routing 
                # algorithms. In addition the "0xffffff" application is advertised in CER/CEA 
                # exchanges.
                # Default: Relaying is enabled.
                #NoRelay;
                
                # Number of server threads that can handle incoming messages at the same time.
                # Default: 4
                #AppServThreads = 4;
                
                # Other applications are configured by loaded extensions.
                
                ##############################################################
                ##  Extensions configuration
                
                #  The freeDiameter framework merely provides support for
                # Diameter Base Protocol. The specific application behaviors,
                # as well as advanced functions, are provided
                # by loadable extensions (plug-ins).
                #  These extensions may in addition receive the name of a 
                # configuration file, the format of which is extension-specific.
                #
                # Format:
                #LoadExtension = "/path/to/extension" [ : "/optional/configuration/file" ] ;
                #
                # Examples:
                #LoadExtension = "extensions/sample.fdx";
                #LoadExtension = "extensions/sample.fdx":"conf/sample.conf";
                
                # Extensions are named as follow:
                # dict_* for extensions that add content to the dictionary definitions.
                # dbg_*  for extensions useful only to retrieve more information on the framework execution.
                # acl_*  : Access control list, to control which peers are allowed to connect.
                # rt_*   : routing extensions that impact how messages are forwarded to other peers.
                # app_*  : applications, these extensions usually register callbacks to handle specific messages.
                # test_* : dummy extensions that are useful only in testing environments.
                
                
                # The dbg_msg_dump.fdx extension allows you to tweak the way freeDiameter displays some
                # information about some events. This extension does not actually use a configuration file
                # but receives directly a parameter in the string passed to the extension. Here are some examples:
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x1111"; # Removes all default hooks, very quiet even in case of errors.
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x2222"; # Display all events with few details.
                ## LoadExtension = "dbg_msg_dumps.fdx" : "0x0080"; # Dump complete information about sent and received messages.
                # The four digits respectively control: connections, routing decisions, sent/received messages, errors.
                # The values for each digit are:
                #  0 - default - keep the default behavior
                #  1 - quiet   - remove any specific log
                #  2 - compact - display only a summary of the information
                #  4 - full    - display the complete information on a single long line
                #  8 - tree    - display the complete information in an easier to read format spanning several lines.
                
                LoadExtension = "dbg_msg_dumps.so" : "0x8888";
                LoadExtension = "dict_rfc5777.so";
                LoadExtension = "dict_mip6i.so";
                LoadExtension = "dict_nasreq.so";
                LoadExtension = "dict_nas_mipv6.so";
                LoadExtension = "dict_dcca.so";
                LoadExtension = "dict_dcca_3gpp.so";
                
                
                ##############################################################
                ##  Peers configuration
                
                #  The local server listens for incoming connections. By default,
                # all unknown connecting peers are rejected. Extensions can override this behavior (e.g., acl_wl).
                # 
                #  In addition to incoming connections, the local peer can
                # be configured to establish and maintain connections to some 
                # Diameter nodes and allow connections from these nodes.
                #  This is achieved with the ConnectPeer directive described below.
                #
                # Note that the configured Diameter Identity MUST match
                # the information received inside CEA, or the connection will be aborted.
                #
                # Format:
                #ConnectPeer = "diameterid" [ { parameter1; parameter2; ...} ] ;
                # Parameters that can be specified in the peer's parameter list:
                #  No_TCP; No_SCTP; No_IP; No_IPv6; Prefer_TCP; TLS_old_method;
                #  No_TLS;       # assume transparent security instead of TLS. DTLS is not supported yet (will change in future versions).
                #  Port = 5868;  # The port to connect to
                #  TcTimer = 30;
                #  TwTimer = 30;
                #  ConnectTo = "202.249.37.5";
                #  ConnectTo = "2001:200:903:2::202:1";
                #  TLS_Prio = "NORMAL";
                #  Realm = "realm.net"; # Reject the peer if it does not advertise this realm.
                # Examples:
                #ConnectPeer = "aaa.wide.ad.jp";
                #ConnectPeer = "old.diameter.serv" { TcTimer = 60; TLS_old_method; No_SCTP; Port=3868; } ;
                ConnectPeer = "smf.localdomain" { ConnectTo = "{{ ip_address_SMF }}"; No_TLS; };
                
                ##############################################################
                
        - name  : Install Docker-CE and other requirements
          shell:  |
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

                add-apt-repository \
                "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) \
                stable"
                
                apt-get update
                apt-get install docker-ce -y

        - name  : Remove docker old docker containers
          ignore_errors: true
          shell:  |
                docker container prune -f
       
        - name  : Remove free5gc-st1 image
          ignore_errors: true
          shell:  |
                docker image rm {{ free5gc_st1_image_name }}

        - name  : Remove free5gc-mongodb image
          ignore_errors: true
          shell:  |
                docker image rm {{ free5gc_mongodb_image_name }}

        - name  : Remove enb-openairsim image
          ignore_errors: true
          shell:  |
                docker image rm {{ oaisim_ue_image_name }}

        - name  : Remove ue-openairsim image
          ignore_errors: true
          shell:  |
                docker image rm {{ oaisim_enb_image_name }}

        - name  : Remove free5gc-webui image
          ignore_errors: true
          shell:  |
                docker image rm {{ free5gc_webui_image_name }}

        - name  : Remove free5g docker custom network
          ignore_errors: true
          shell:  |
                docker network rm {{ docker_custom_network_name }}

        - name  : Create Docker custom network
          shell:  | 
                docker network create --subnet={{ docker_custom_subnet_network }} --driver bridge {{ docker_custom_network_name }}            
 
        - name  : Run free5gc AMF container
          shell:  |
                docker run -ti -d --privileged --net {{ docker_custom_network_name }} --ip {{ ip_address_AMF }} --name {{ AMF_container_name }} {{ free5gc_st1_image_name }} bash 

        - name  : Run free5gc SMF container
          shell:  |
                docker run -ti -d --privileged --net {{ docker_custom_network_name }} --ip {{ ip_address_SMF }} --name {{ SMF_container_name }} {{ free5gc_st1_image_name }} bash 

        - name  : Run free5gc HSS container
          shell:  |
                docker run -ti -d --privileged --net {{ docker_custom_network_name }} --ip {{ ip_address_HSS }} --name {{ HSS_container_name }} {{ free5gc_st1_image_name }} bash 

        - name  : Run free5gc PCRF container
          shell:  |
                docker run -ti -d --privileged --net {{ docker_custom_network_name }} --ip {{ ip_address_PCRF }} --name {{ PCRF_container_name }} {{ free5gc_st1_image_name }} bash 

        - name  : Run free5gc UPF container
          shell:  |
                docker run -ti -d --privileged --net {{ docker_custom_network_name }} --ip {{ ip_address_UPF }} --name {{ UPF_container_name }} {{ free5gc_st1_image_name }} bash 

        - name  : Run free5gc MONGO-DB container
          shell:  |
                docker run -ti -d --net {{ docker_custom_network_name }} --ip {{ ip_address_MONGO_DB }} --name {{ MONGO_DB_container_name }} {{ free5gc_mongodb_image_name }} bash

        - name  : Run free5gc WEBUI container
          shell :  |
                docker run -ti -d -p {{ web_interface_port_access }}:3000 --net {{ docker_custom_network_name }} --ip {{ ip_address_WEB_UI }} --name {{ WEB_UI_container_name }} {{ free5gc_webui_image_name }} bash

        - name  : Run OpenAirSIM-enB container
          shell :  |
                docker run -ti -d --privileged --net {{ docker_custom_network_name }} --ip {{ ip_address_OAISIM_ENB }} --name {{ ENB_container_name }} {{ oaisim_enb_image_name }} bash 
          when  : deploy_oaisim == 'true'

        - name  : Run OpenAirSIM-UE container
          shell :  |
                docker run -ti -d --privileged --net {{ docker_custom_network_name }} --ip {{ ip_address_OAISIM_UE }} --name {{ UE_container_name }} {{ oaisim_ue_image_name }} bash 
          when  : deploy_oaisim == 'true'
                
        - name  : Build enB rcc.band7.tm1.nfapi.conf file 1/3 
          shell : |
                docker exec {{ ENB_container_name }} /bin/sh -c "rm enb/ci-scripts/conf_files/rcc.band7.tm1.nfapi.conf"
          when  : deploy_oaisim == 'true'

        - name  : Build enB rcc.band7.tm1.nfapi.conf file 2/3
          copy  :
            dest: "{{ BASE_DIR_INSTALL }}/rcc.band7.tm1.nfapi.conf"
            content: |
                Active_eNBs = ( "eNB-Eurecom-LTEBox");
                # Asn1_verbosity, choice in: none, info, annoying
                Asn1_verbosity = "none";

                eNBs =
                (
                {
                    ////////// Identification parameters:
                    eNB_ID    =  0xe00;

                    cell_type =  "CELL_MACRO_ENB";

                    eNB_name  =  "eNB-Eurecom-LTEBox";

                    // Tracking area code, 0x0000 and 0xfffe are reserved values
                    tracking_area_code = 1;

                    plmn_list = ( { mcc = 208; mnc = 93; mnc_length = 2; } );

                    tr_s_preference     = "local_mac"

                    ////////// Physical parameters:

                    component_carriers = (
                    {
                    node_function                       = "3GPP_eNODEB";
                    node_timing                         = "synch_to_ext_device";
                    node_synch_ref                      = 0;
                    frame_type					                = "FDD";
                    tdd_config 					                = 3;
                    tdd_config_s            			      = 0;
                    prefix_type             			      = "NORMAL";
                    eutra_band              			      = 7;
                    downlink_frequency      			      = 2685000000L;
                    uplink_frequency_offset 			      = -120000000;
                    Nid_cell					                  = 0;
                    N_RB_DL                 			      = 50;
                    Nid_cell_mbsfn          			      = 0;
                    nb_antenna_ports                    = 1;
                    nb_antennas_tx          			      = 1;
                    nb_antennas_rx          			      = 1;
                    tx_gain                             = 90;
                    rx_gain                             = 125;
                    pbch_repetition                     = "FALSE";
                    prach_root              			      = 0;
                    prach_config_index      			      = 0;
                    prach_high_speed        			      = "DISABLE";
                    prach_zero_correlation  			      = 1;
                    prach_freq_offset       			      = 2;
                    pucch_delta_shift       			      = 1;
                    pucch_nRB_CQI           			      = 0;
                    pucch_nCS_AN            			      = 0;
                    pucch_n1_AN             			      = 0;
                    pdsch_referenceSignalPower 			    = -27;
                    pdsch_p_b                  			    = 0;
                    pusch_n_SB                 			    = 1;
                    pusch_enable64QAM          			    = "DISABLE";
                    pusch_hoppingMode                   = "interSubFrame";
                    pusch_hoppingOffset                 = 0;
                    pusch_groupHoppingEnabled  			    = "ENABLE";
                    pusch_groupAssignment      			    = 0;
                    pusch_sequenceHoppingEnabled		   	= "DISABLE";
                    pusch_nDMRS1                        = 1;
                    phich_duration                      = "NORMAL";
                    phich_resource                      = "ONESIXTH";
                    srs_enable                          = "DISABLE";
                    /*  srs_BandwidthConfig             =;
                    srs_SubframeConfig                  =;
                    srs_ackNackST                       =;
                    srs_MaxUpPts                        =;*/

                    pusch_p0_Nominal                    = -96;
                    pusch_alpha                         = "AL1";
                    pucch_p0_Nominal                    = -104;
                    msg3_delta_Preamble                 = 6;
                    pucch_deltaF_Format1                = "deltaF2";
                    pucch_deltaF_Format1b               = "deltaF3";
                    pucch_deltaF_Format2                = "deltaF0";
                    pucch_deltaF_Format2a               = "deltaF0";
                    pucch_deltaF_Format2b		    	      = "deltaF0";

                    rach_numberOfRA_Preambles           = 64;
                    rach_preamblesGroupAConfig          = "DISABLE";
                    /*
                    rach_sizeOfRA_PreamblesGroupA       = ;
                    rach_messageSizeGroupA              = ;
                    rach_messagePowerOffsetGroupB       = ;
                    */
                    rach_powerRampingStep                       = 4;
                    rach_preambleInitialReceivedTargetPower     = -108;
                    rach_preambleTransMax                       = 10;
                    rach_raResponseWindowSize                   = 10;
                    rach_macContentionResolutionTimer           = 48;
                    rach_maxHARQ_Msg3Tx                         = 4;

                    pcch_default_PagingCycle                    = 128;
                    pcch_nB                                     = "oneT";
                    bcch_modificationPeriodCoeff			          = 2;
                    ue_TimersAndConstants_t300			            = 1000;
                    ue_TimersAndConstants_t301			            = 1000;
                    ue_TimersAndConstants_t310			            = 1000;
                    ue_TimersAndConstants_t311			            = 10000;
                    ue_TimersAndConstants_n310			            = 20;
                    ue_TimersAndConstants_n311			            = 1;
                    ue_TransmissionMode                         = 1;

                    //Parameters for SIB18
                    rxPool_sc_CP_Len                            = "normal";
                    rxPool_sc_Period                            = "sf40";
                    rxPool_data_CP_Len                          = "normal";
                    rxPool_ResourceConfig_prb_Num               = 20;
                    rxPool_ResourceConfig_prb_Start             = 5;
                    rxPool_ResourceConfig_prb_End               = 44;
                    rxPool_ResourceConfig_offsetIndicator_present = "prSmall";
                    rxPool_ResourceConfig_offsetIndicator_choice  = 0;
                    rxPool_ResourceConfig_subframeBitmap_present  = "prBs40";
                    rxPool_ResourceConfig_subframeBitmap_choice_bs_buf  = "00000000000000000000";
                    rxPool_ResourceConfig_subframeBitmap_choice_bs_size = 5;
                    rxPool_ResourceConfig_subframeBitmap_choice_bs_bits_unused  = 0;
                /*    rxPool_dataHoppingConfig_hoppingParameter                 = 0;
                    rxPool_dataHoppingConfig_numSubbands                        = "ns1";
                    rxPool_dataHoppingConfig_rbOffset                           = 0;
                    rxPool_commTxResourceUC-ReqAllowed                          = "TRUE";
                */
                    // Parameters for SIB19
                    discRxPool_cp_Len                                           = "normal"
                    discRxPool_discPeriod                                       = "rf32"
                    discRxPool_numRetx                                          = 1;
                    discRxPool_numRepetition                                    = 2;
                    discRxPool_ResourceConfig_prb_Num                           = 5;
                    discRxPool_ResourceConfig_prb_Start                         = 3;
                    discRxPool_ResourceConfig_prb_End                           = 21;
                    discRxPool_ResourceConfig_offsetIndicator_present           = "prSmall";
                    discRxPool_ResourceConfig_offsetIndicator_choice            = 0;
                    discRxPool_ResourceConfig_subframeBitmap_present            = "prBs40";
                    discRxPool_ResourceConfig_subframeBitmap_choice_bs_buf      = "f0ffffffff";
                    discRxPool_ResourceConfig_subframeBitmap_choice_bs_size     = 5;
                    discRxPool_ResourceConfig_subframeBitmap_choice_bs_bits_unused  = 0;

                    }
                    );


                    srb1_parameters :
                    {
                        # timer_poll_retransmit = (ms) [5, 10, 15, 20,... 250, 300, 350, ... 500]
                        timer_poll_retransmit    = 80;

                        # timer_reordering = (ms) [0,5, ... 100, 110, 120, ... ,200]
                        timer_reordering         = 35;

                        # timer_reordering = (ms) [0,5, ... 250, 300, 350, ... ,500]
                        timer_status_prohibit    = 0;

                        # poll_pdu = [4, 8, 16, 32 , 64, 128, 256, infinity(>10000)]
                        poll_pdu                 =  4;

                        # poll_byte = (kB) [25,50,75,100,125,250,375,500,750,1000,1250,1500,2000,3000,infinity(>10000)]
                        poll_byte                =  99999;

                        # max_retx_threshold = [1, 2, 3, 4 , 6, 8, 16, 32]
                        max_retx_threshold       =  4;
                    }

                    # ------- SCTP definitions
                    SCTP :
                    {
                        # Number of streams to use in input/output
                        SCTP_INSTREAMS  = 2;
                        SCTP_OUTSTREAMS = 2;
                    };


                    ////////// MME parameters:
                    mme_ip_address      = ( {   ipv4       = "{{ ip_address_AMF }}";
                                                ipv6       = "192:168:30::17";
                                                active     = "yes";
                                                preference = "ipv4";
                                            }
                                        );

                    NETWORK_INTERFACES :
                    {
                        ENB_INTERFACE_NAME_FOR_S1_MME            = "{{ physical_network_interface }}";
                        ENB_IPV4_ADDRESS_FOR_S1_MME              = "{{ ip_address_OAISIM_ENB }}";
                        ENB_INTERFACE_NAME_FOR_S1U               = "{{ physical_network_interface }}";
                        ENB_IPV4_ADDRESS_FOR_S1U                 = "{{ ip_address_OAISIM_ENB }}";
                        ENB_PORT_FOR_S1U                         = 2152; # Spec 2152
                        ENB_IPV4_ADDRESS_FOR_X2C                 = "{{ ip_address_OAISIM_ENB }}";
                        ENB_PORT_FOR_X2C                         = 36422; # Spec 36422
                        
                    };
                }
                );

                MACRLCs = (
                    {
                    num_cc = 1;
                        local_s_if_name  = "lo:";			  
                        remote_s_address = "{{ ip_address_OAISIM_UE }}";
                        local_s_address  = "{{ ip_address_OAISIM_ENB }}"; 
                        local_s_portc    = 50001;	
                        remote_s_portc   = 50000;
                        local_s_portd    = 50011;	
                        remote_s_portd   = 50010;
                        tr_s_preference = "nfapi";
                        tr_n_preference = "local_RRC";
                        }  
                );

                RUs = (
                    {
                        local_rf       = "yes"
                        nb_tx          = 1
                        nb_rx          = 1
                        att_tx         = 20
                        att_rx         = 0;
                        bands          = [38];
                        max_pdschReferenceSignalPower = -23;
                        max_rxgain                    = 116;
                        eNB_instances  = [0];
                    }
                );


                THREAD_STRUCT = (
                {
                    #three config for level of parallelism "PARALLEL_SINGLE_THREAD", "PARALLEL_RU_L1_SPLIT", or "PARALLEL_RU_L1_TRX_SPLIT"
                    parallel_config    = "PARALLEL_RU_L1_TRX_SPLIT";
                    #two option for worker "WORKER_DISABLE" or "WORKER_ENABLE"
                    worker_config      = "WORKER_ENABLE";
                }
                );

                log_config =
                    {
                    global_log_level                      ="info";
                    global_log_verbosity                  ="medium";
                    hw_log_level                          ="info";
                    hw_log_verbosity                      ="medium";
                    phy_log_level                         ="info";
                    phy_log_verbosity                     ="medium";
                    mac_log_level                         ="info";
                    mac_log_verbosity                     ="high";
                    rlc_log_level                         ="info";
                    rlc_log_verbosity                     ="medium";
                    pdcp_log_level                        ="info";
                    pdcp_log_verbosity                    ="medium";
                    rrc_log_level                         ="info";
                    rrc_log_verbosity                     ="medium";
                };

        - name  : Build enB rcc.band7.tm1.nfapi.conf file 3/3 
          shell : |
                docker cp ./rcc.band7.tm1.nfapi.conf {{ ENB_container_name }}:/root/enb/ci-scripts/conf_files/rcc.band7.tm1.nfapi.conf
          args:
            chdir: "{{ BASE_DIR_INSTALL }}"
          when  : deploy_oaisim == 'true'

        - name  : Build UE ue.nfapi.conf file 1/3 
          shell : |
                  docker exec {{ UE_container_name }} /bin/sh -c "rm ue/ci-scripts/conf_files/ue.nfapi.conf"
          when  : deploy_oaisim == 'true'

        - name  : Build UE ue.nfapi.conf file 2/3
          copy:
            dest: "{{ BASE_DIR_INSTALL }}/ue.nfapi.conf"
            content: |
                log_config = {
                    global_log_level                      ="info";
                    global_log_verbosity                  ="medium";
                    hw_log_level                          ="info";
                    hw_log_verbosity                      ="medium";
                    phy_log_level                         ="info";
                    phy_log_verbosity                     ="medium";
                    mac_log_level                         ="info";
                    mac_log_verbosity                     ="medium";
                    rlc_log_level                         ="info";
                    rlc_log_verbosity                     ="medium";
                    pdcp_log_level                        ="info";
                    pdcp_log_verbosity                    ="medium";
                    rrc_log_level                         ="info";
                    rrc_log_verbosity                     ="full";
                    };


                    L1s = (
                            {
                        num_cc = 1;
                        tr_n_preference = "nfapi";
                            local_n_if_name  = "{{ physical_network_interface }}";
                            remote_n_address = "{{ ip_address_OAISIM_ENB }}";
                            local_n_address  = "{{ ip_address_OAISIM_UE }}";
                            local_n_portc    = 50000;
                            remote_n_portc   = 50001;
                            local_n_portd    = 50010;
                            remote_n_portd   = 50011;
                            }  
                    );

                    RUs = (
                        {		  
                        local_rf       = "yes"
                        nb_tx          = 1
                        nb_rx          = 1
                        att_tx         = 90
                        att_rx         = 0;
                        bands          = [7,38,42,43];
                        max_pdschReferenceSignalPower = -27;
                        max_rxgain                    = 125;
                        }		      
                    );
          when  : deploy_oaisim == 'true'
        
        - name  : Build UE ue.nfapi.conf file 3/3 
          shell : |
                docker cp ./ue.nfapi.conf {{ UE_container_name }}:/root/ue/ci-scripts/conf_files/ue.nfapi.conf
          args:
            chdir: "{{ BASE_DIR_INSTALL }}"
          when  : deploy_oaisim == 'true'

        - name  : Build UE ue_eurecom_test_sfr.conf file 1/5 
          shell : |
                  docker exec {{ UE_container_name }} /bin/sh -c "rm ue/openair3/NAS/TOOLS/ue_eurecom_test_sfr.conf"
          when  : deploy_oaisim == 'true'

        - name  : Build UE ue_eurecom_test_sfr.conf file 2/5 
          copy:
            dest: "{{ BASE_DIR_INSTALL }}/ue_eurecom_test_sfr.conf"
            content: |
                # List of known PLMNS
                PLMN: {
                    PLMN0: {
                        FULLNAME="Test network";
                        SHORTNAME="OAI4G";
                        MNC="01";
                        MCC="001";

                    };
                    PLMN1: {
                        FULLNAME="SFR France";
                        SHORTNAME="SFR";
                        MNC="10";
                        MCC="208";

                    };
                    PLMN2: {
                        FULLNAME="SFR France";
                        SHORTNAME="SFR";
                        MNC="11";
                        MCC="208";
                    };
                    PLMN3: {
                        FULLNAME="SFR France";
                        SHORTNAME="SFR";
                        MNC="13";
                        MCC="208";
                    };
                    PLMN4: {
                        FULLNAME="OAI LTEBOX";
                        SHORTNAME="OAIALU";
                        MNC="93";
                        MCC="208";
                    };
                    PLMN5: {
                        FULLNAME="T-Mobile USA";
                        SHORTNAME="T-Mobile";
                        MNC="280";
                        MCC="310";
                    };
                    PLMN6: {
                        FULLNAME="FICTITIOUS USA";
                        SHORTNAME="FICTITIO";
                        MNC="028";
                        MCC="310";
                    };
                    PLMN7: {
                        FULLNAME="Vodafone Italia";
                        SHORTNAME="VODAFONE";
                        MNC="10";
                        MCC="222";
                    };
                    PLMN8: {
                        FULLNAME="Vodafone Spain";
                        SHORTNAME="VODAFONE";
                        MNC="01";
                        MCC="214";
                    };
                    PLMN9: {
                        FULLNAME="Vodafone Spain";
                        SHORTNAME="VODAFONE";
                        MNC="06";
                        MCC="214";
                    };
                    PLMN10: {
                        FULLNAME="Vodafone Germ";
                        SHORTNAME="VODAFONE";
                        MNC="02";
                        MCC="262";
                    };
                    PLMN11: {
                        FULLNAME="Vodafone Germ";
                        SHORTNAME="VODAFONE";
                        MNC="04";
                        MCC="262";
                    };
                };
          when  : deploy_oaisim == 'true'

        - name  : Build UE ue_eurecom_test_sfr.conf file 3/5
          blockinfile:
            path: /root/{{ BASE_DIR_INSTALL }}/ue_eurecom_test_sfr.conf
            block: |
                {{ item.ue_id }}:
                  {
                        USER: {
                            IMEI="356113022094149";
                            MANUFACTURER="EURECOM";
                            MODEL="LTE Android PC";
                            PIN="0000";
                        };
                        SIM: {
                            MSIN="{{ item.msin }}";
                            USIM_API_K="{{ USIM_API_K }}";
                            OPC="{{ OPC }}";
                            MSISDN="33638020004";
                        };
                        HPLMN= "20893";
                        UCPLMN_LIST = ();
                        OPLMN_LIST = ("00101", "20810", "20811", "20813", "20893", "310280", "310028");
                        OCPLMN_LIST = ("22210", "21401", "21406", "26202", "26204");
                        FPLMN_LIST = ();
                        EHPLMN_LIST= ();
                    };
            marker: "# {mark} User Equipment {{ item.ue_id }}"
          loop: "{{ user_equiments }}"
          loop_control:
            index_var: ue_idx
          when: "ue_idx|int < {{ num_ues }} and deploy_oaisim == 'true'"
        
        - name  : Build UE ue_eurecom_test_sfr.conf file 4/5 
          shell : |
                docker cp ./ue_eurecom_test_sfr.conf {{ UE_container_name }}:/root/ue/openair3/NAS/TOOLS/ue_eurecom_test_sfr.conf
          args:
            chdir: "{{ BASE_DIR_INSTALL }}"
          when  : deploy_oaisim == 'true'

        - name  : Build UE ue_eurecom_test_sfr.conf file 5/5 
          shell : |
                    docker exec {{ UE_container_name }} /bin/sh -c "cd /root/ue/targets/bin && sudo ./conf2uedata -c /root/ue/openair3/NAS/TOOLS/ue_eurecom_test_sfr.conf -o /root/ue/cmake_targets/ran_build/build/"
          when  : deploy_oaisim == 'true'

        - name  : Copy config file's to free5gc container's 
          shell : |
                docker cp ./free5gc.conf {{ AMF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/free5gc.conf
                docker cp ./free5gc.conf {{ SMF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/free5gc.conf
                docker cp ./free5gc.conf {{ HSS_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/free5gc.conf
                docker cp ./free5gc.conf {{ PCRF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/free5gc.conf
                docker cp ./free5gc.conf {{ UPF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/free5gc.conf
                docker cp ./amf.conf     {{ AMF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/amf.conf
          args:
            chdir: "{{ BASE_DIR_INSTALL }}"

        - name  : Exec MONGO-DB container
          shell:  |
                  docker exec -d {{ MONGO_DB_container_name }} /bin/sh -c "/etc/init.d/mongodb start"

        - name  : Exec AMF container
          shell:  |
                  docker exec {{ AMF_container_name }} /bin/sh -c "chmod u+x /root/free5gc-stage-1/build_certs.sh"
                  docker exec {{ AMF_container_name }} /bin/sh -c "/root/free5gc-stage-1/build_certs.sh"

        - name  : Exec SMF container
          shell :  |
                  docker exec {{ SMF_container_name }} /bin/sh -c "chmod u+x /root/free5gc-stage-1/build_certs.sh"
                  docker exec {{ SMF_container_name }} /bin/sh -c "/root/free5gc-stage-1/build_certs.sh"

        - name  : Exec HSS container
          shell :  |
                  docker exec {{ HSS_container_name }} /bin/sh -c "chmod u+x /root/free5gc-stage-1/build_certs.sh"
                  docker exec {{ HSS_container_name }} /bin/sh -c "/root/free5gc-stage-1/build_certs.sh"

        - name  : Exec PCRF container
          shell :  |
                  docker exec {{ PCRF_container_name }} /bin/sh -c "chmod u+x /root/free5gc-stage-1/build_certs.sh"
                  docker exec {{ PCRF_container_name }} /bin/sh -c "/root/free5gc-stage-1/build_certs.sh"

        - name  : Exec UPF container
          shell :  |
                  docker exec {{ UPF_container_name }} /bin/sh -c "chmod u+x /root/free5gc-stage-1/build_certs.sh"
                  docker exec {{ UPF_container_name }} /bin/sh -c "/root/free5gc-stage-1/build_certs.sh"                  
                  docker exec {{ UPF_container_name }} /bin/sh -c "chmod +x /root/free5gc-stage-1/setup-uptun.sh"
                  docker exec {{ UPF_container_name }} /bin/sh -c "sh -c /root/free5gc-stage-1/setup-uptun.sh"

#       - name  : Remove amf.conf default file from AMF container 
#         ignore_errors: true
#          shell : |
#            docker exec {{ AMF_container_name }} /bin/sh -c "rm -rf /root/free5gc-stage-1/install/etc/free5gc/*.conf"
#            docker exec {{ AMF_container_name }} /bin/sh -c "rm -rf /root/free5gc-stage-1/install/etc/free5gc/freeDiameter/*.conf"

#        - name  : Remove smf.conf default file from SMF container 
#          ignore_errors: true
#          shell : |
#            docker exec {{ SMF_container_name }} /bin/sh -c "rm -rf /root/free5gc-stage-1/install/etc/free5gc/*.conf"
#            docker exec {{ SMF_container_name }} /bin/sh -c "rm -rf /root/free5gc-stage-1/install/etc/free5gc/freeDiameter/*.conf"

#        - name  : Remove hss.conf default file from HSS container 
#          ignore_errors: true
#          shell : |
#            docker exec {{ HSS_container_name }} /bin/sh -c "rm -rf /root/free5gc-stage-1/install/etc/free5gc/*.conf"
#            docker exec {{ HSS_container_name }} /bin/sh -c "rm -rf /root/free5gc-stage-1/install/etc/free5gc/freeDiameter/*.conf"

#        - name  : Remove pcrf.conf default file from PCRF container 
#          ignore_errors: true
#          shell : |
#            docker exec {{ PCRF_container_name }} /bin/sh -c "rm -rf /root/free5gc-stage-1/install/etc/free5gc/*.conf"
#            docker exec {{ PCRF_container_name }} /bin/sh -c "rm -rf /root/free5gc-stage-1/install/etc/free5gc/freeDiameter/*.conf"

#        - name  : Copy config file's to free5gc container's 
#          shell : |
#                docker cp ./free5gc.conf {{ AMF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/free5gc.conf
#                docker cp ./free5gc.conf {{ SMF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/free5gc.conf
#                docker cp ./free5gc.conf {{ HSS_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/free5gc.conf
#                docker cp ./free5gc.conf {{ PCRF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/free5gc.conf
#                docker cp ./free5gc.conf {{ UPF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/free5gc.conf
#                docker cp ./amf.conf     {{ AMF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/amf.conf
#                docker cp ./smf.conf     {{ SMF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/smf.conf
#                docker cp ./hss.conf     {{ HSS_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/hss.conf
#                docker cp ./pcrf.conf    {{ PCRF_container_name }}:/root/free5gc-stage-1/install/etc/free5gc/freeDiameter/pcrf.conf
#          args:
#            chdir: "{{ BASE_DIR_INSTALL }}"
    
        - name  : Exec WEBUI container
          shell :  |
                  docker exec -d {{ WEB_UI_container_name }} /bin/sh -c "cd /root/free5gc-stage-1/webui && npm run dev"
          when  : start_webapp == 'true'

 #       - name  : Running UE container
 #         shell :  |
 #                 docker exec -d {{ UE_container_name }} /bin/sh -c "cd ue/cmake_targets/ran_build/build/ && ./lte-uesoftmodem -O /ue/ci-scripts/conf_files/ue.nfapi.conf --L2-emul 3 --num-ues 1 --nums_ue_thread 1 --nokrnmod 1 > ue.log 2>&1"
 #         when  : start_webapp == 'true'
          
        - name  : Clear file instalation
          shell : rm -rf {{ BASE_DIR_INSTALL }}
          when  : clear_file_instalation == 'true'



